
// Doubles and Strings
/*
double stores appproximation of real numbers, and String stores strings of characters.
*/


// Creative Exercise 1a: Drawing a Triangle
public class DrawTriangle {
   public static void main(String[] args) {
      for (int row = 0; row < 5; row++) {
         for (int col = 0; col <= row; col++) {
            System.out.print("*");
         }
         System.out.println();
      }
   }
} 


// Creative Exercise 1b: DrawTriangle
public class DrawTriangle {
   public static void DrawTriangle(int N) {
      for (int row = 0; row < N; row++) {
         for (int col = 0; col <= row; col++) {
            System.out.print("*");
         }
         System.out.println();
      }
   }
   public static void main(String[] args) {
      DrawTriangle(10);
   }
}


// Exercise 2
public class ClassNameHere {
   public static int max(int[] m) {
      int result = m[0];
      for (int i = 0; i < m.length; i++) {
         if (m[i] > result) {
            result = m[i];
         }
      }
      return result;
   }

   public static void main(String[] args) {
      int[] numbers = new int[]{9, 2, 15, 2, 22, 10, 6};
      System.out.print(max(numbers));
   }
}


// for loops
/*
In Java, the for keyword has the syntax below:

for (initialization; termination; increment) {
    statement(s)
}
The initialization, termination, and increment must be semicolon separated. 
Each of these three can feature multiple comma-separated statements, e.g.

for (int i = 0, j = 10; i < j; i += 1) {
    System.out.println(i + j);
}
Comma separated for loops should be used sparingly.
*/


// Optional: Exercise 4
public class BreakContinue {
  public static void windowPosSum(int[] a, int n) {
    for (int i = 0; i < a.length; i++) {
       if (a[i] <= 0) {
          continue;
       }
	   
       for (int j = i+1; j < Math.min(a.length, i+n+1); j++) {
          a[i] = a[i] + a[j];
       }
    }
  }

  public static void main(String[] args) {
    int[] a = {1, 2, -3, 4, 5, 4};
    int n = 3;
    windowPosSum(a, n);

    // Should print 4, 8, -3, 13, 9, 4
    System.out.println(java.util.Arrays.toString(a));
  }
} 


// The Enhanced For Loop
public class EnhancedForBreakDemo {
    public static void main(String[] args) {
        String[] a = {"cat", "dog", "laser horse", "ketchup", "horse", "horbse"};

        for (String s : a) {
            for (int j = 0; j < 3; j += 1) {
                System.out.println(s);
                if (s.contains("horse")) {
                    break;
                }                
            }
        }
    }
}



























