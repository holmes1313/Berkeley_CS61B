
// Hello World
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello world!");
    }
}

/*
1. All code in Java must be part of a class.
2. We delimite the beginning and end of segments of code using { and }.
3. All statements in Java must end in a semi-colon.
4. For code to run we need public static void main (String[], args)
*/


// Running a Java Program
/*
The most common way to execute a Java program is to run it through a sequence of two programs. The first is the Java compiler, or javac. The second is the Java interpreter, or java.
javac is used to compile programs. java is used to execute programs.

Hello.java -> Compiler(javac) -> Hello.class -> Interpreter(java) -> stuff happens

$ javac HelloWorld.java
$ java HelloWorld
Hello World! 
*/


// Variables and Loops
public class HelloNumbers {
	public static void main(String[] args) {
		int x = 0;
		while (x < 10) {
			System.out.println(x);
			x++;
		}
	}
}
 /* 
In Java, variables have a specific type. And those types can never change.
1. Before Java variables can be used, they must be declared. Variables have declared types, also called their “static type”.
2. Java variables must have a specific type.
3. Java varaible types can never change.
4. Types are verified before the code even runs!!!
*/


// Static Typing
/*
Java variables can contain values of that type, and only that type. Furthermore, the type of a variable can never change.
One of the key features of the Java compiler is that it performs a static type check.
This is a big deal, because it means that there's no chance that somebody running this program out in the world will ever run into a type error!
The compiler ensures type consistency. If types are inconsistent, the program will not compile.
*/

System.out.println(5 + "horse");   // "5horse"
System.out.println(5 + "10");      // "510"


// Defining functions in Java
public class LargerDemo {
	/** Returns the larger of x and y. */
	public static int larger(int x, int y){
		if (x > y) {
			return x;
		}
		return y;
	}
	
	public static void main(String[], args) {
		System.out.println(larger(-5, 10));
	}
}

/* 
1. Functions must be declared as part of a class in Java.
   A function that is part of a class is called a "method".
   So in Java, all functions are methods.
2. To define a function in Java, we use "public static".
   We will see alternative ways of defining functions later.
3. All parameters of a function must have a declard type,
   and the return values of the function must have a declared type.
   Functions in Java return only one value!
*/


// Code Style, Comments, Javadoc
/*
Comments where appropriate. Line comments in Java use the // delimiter. Block (a.k.a. multi-line comments) comments use /* and */.
In a Javadoc comment, the block comment starts with an extra asterisk, e.g. /**, and the comment often (but not always) contains descriptive tags.
The widely used javadoc tool can be used to generate HTML descriptions of your code. 
*/







































